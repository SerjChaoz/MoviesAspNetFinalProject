@model MoviesAspFinalProject.Models.Actor

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Actor</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ActorId)

        <div class="form-group">
            @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.BirthDay, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.BirthDay, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.BirthDay, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class = "control-label col-md-2" for="Deceased">Deceased?</label>
            <div class="col-md-10">
                <div class="checkbox">
                    <input class="check-box" name="Deceased" type="checkbox" checked="@(Model.DeathDay.CompareTo(Model.BirthDay) < 0 ? false : true)">
                </div>
            </div>
        </div>

        <div class="form-group" name="DeathDay" style="display: @(Model.DeathDay.CompareTo(Model.BirthDay) < 0 ? "none" : "block");">
            @Html.LabelFor(model => model.DeathDay, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DeathDay, new { htmlAttributes = new { @class = "form-control"} })
                @Html.ValidationMessageFor(model => model.DeathDay, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Gender, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.HasOskar, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.HasOskar)
                    @Html.ValidationMessageFor(model => model.HasOskar, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Movies, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    <ul>
                        @foreach (var item in (MultiSelectList)ViewBag.Movies)
                        {
                            <li><input type="checkbox" value="@item.Value" name="Ids" id="@item.Value" @(item.Selected ? "checked" : "") /> @item.Text
                            <p>Role Name: <input type="text" value="@(item.Selected ? Model.Movies.SingleOrDefault(x => x.MovieId == item.Value).RoleName : "")" name="RoleNames" id="r_@item.Value" @(!item.Selected ? "disabled" : "") required /></p></li>
                        }
                    </ul>
                    @Html.ValidationMessageFor(model => model.Movies, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script src="~/Scripts/rolenamehiding.js"></script>
    <script src="~/Scripts/deceased.js"></script>
}
